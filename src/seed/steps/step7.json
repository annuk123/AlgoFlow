[
      {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 1",
    "topicTitle": "Get a Strong Hold",
    "slug": "recursive-implementation-of-atoi",
    "title": "Recursive Implementation of atoi()",
    "difficulty": "Medium",
    "description": "Implement a recursive version of the atoi() function.",
    "tags": ["string", "recursion"]
  },
        {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 1",
    "topicTitle": "Get a Strong Hold",
    "slug": "pow-x-n",
    "title": "Pow(x, n)",
    "difficulty": "Medium",
    "description": "Implement pow(x, n), which calculates x raised to the power n.",
    "tags": ["math", "recursion"]
  },
        {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 1",
    "topicTitle": "Get a Strong Hold",
    "slug": "count-good-numbers",
    "title": "Count Good numbers",
    "difficulty": "Medium",
    "description": "Count the numbers with even digits in a given range.",
    "tags": ["counting", "digits"]
  },
        {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 1",
    "topicTitle": "Get a Strong Hold",
    "slug": "sort-a-stack-using-recursion",
    "title": "Sort a stack using recursion",
    "difficulty": "Medium",
    "description": "Sort a stack using recursion.",
    "tags": ["stack", "recursion"]
  },
        {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 1",
    "topicTitle": "Get a Strong Hold",
    "slug": "reverse-a-stack-using-recursion",
    "title": "Reverse a stack using recursion",
    "difficulty": "Medium",
    "description": "Reverse a stack using recursion.",
    "tags": ["stack", "recursion"]
  },


        {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "generate-all-binary-strings",
    "title": "Generate all binary strings",
    "difficulty": "Medium",
    "description": "Generate all binary strings of a given length.",
    "tags": ["backtracking", "string"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "generate-parentheses",
    "title": "Generate Parentheses",
    "difficulty": "Medium",
    "description": "Generate all combinations of well-formed parentheses.",
    "tags": ["backtracking", "string"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "print-all-subsequences-power-set",
    "title": "Print all subsequences/Power Set",
    "difficulty": "Medium",
    "description": "Print all subsequences (power set) of a given array.",
    "tags": ["backtracking", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "learn-all-patterns-of-subsequences-theory",
    "title": "Learn All Patterns of Subsequences (Theory)",
    "difficulty": "Medium",
    "description": "Understand the different patterns of subsequences and how to approach them.",
    "tags": ["dynamic-programming", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "count-all-subsequences-with-sum-k",
    "title": "Count all subsequences with sum K",
    "difficulty": "Medium",
    "description": "Count all subsequences of the array that add up to a target sum K.",
    "tags": ["binary-search", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "check-if-there-exists-a-subsequence-with-sum-k",
    "title": "Check if there exists a subsequence with sum K",
    "difficulty": "Medium",
    "description": "Check if there exists a subsequence of the array that adds up to a target sum K.",
    "tags": ["binary-search", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "combination-sum",
    "title": "Combination Sum",
    "difficulty": "Medium",
    "description": "Find all unique combinations of numbers that add up to a target number.",
    "tags": ["backtracking", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "combination-sum-ii",
    "title": "Combination Sum-II",
    "difficulty": "Medium",
    "description": "Find all unique combinations of numbers that add up to a target number, allowing each number to be used only once.",
    "tags": ["backtracking", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "subset-sum-i",
    "title": "Subset Sum-I",
    "difficulty": "Medium",
    "description": "Find all subsets of a set of numbers that sum up to a target value.",
    "tags": ["backtracking", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "subset-sum-ii",
    "title": "Subset Sum-II",
    "difficulty": "Medium",
    "description": "Find all unique subsets of a set of numbers that sum up to a target value.",
    "tags": ["backtracking", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "combination-sum-iii",
    "title": "Combination Sum - III",
    "difficulty": "Medium",
    "description": "Find all unique combinations of k numbers that add up to a target number.",
    "tags": ["backtracking", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 2",
    "topicTitle": "Subsequences Pattern",
    "slug": "letter-combinations-of-a-phone-number",
    "title": "Letter Combinations of a Phone Number",
    "difficulty": "Medium",
    "description": "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.",
    "tags": ["backtracking", "string"]
  },

        {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 3",
    "topicTitle": "Trying out all Combos / Hard",
    "slug": "palindrome-partitioning",
    "title": "Palindrome Partitioning",
    "difficulty": "Medium",
    "description": "Given a string s, partition s such that every substring is a palindrome.",
    "tags": ["backtracking", "string"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 3",
    "topicTitle": "Trying out all Combos / Hard",
    "slug": "word-search",
    "title": "Word Search",
    "difficulty": "Medium",
    "description": "Given a 2D board and a word, find if the word exists in the grid.",
    "tags": ["binary-search", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 3",
    "topicTitle": "Trying out all Combos / Hard",
    "slug": "n-queens",
    "title": "N Queens",
    "difficulty": "Medium",
    "description": "Place N queens on an NÃ—N chessboard so that no two queens threaten each other.",
    "tags": ["backtracking", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 3",
    "topicTitle": "Trying out all Combos / Hard",
    "slug": "rat-in-a-maze",
    "title": "Rat in a Maze",
    "difficulty": "Medium",
    "description": "Find a path from the top-left corner to the bottom-right corner of a maze.",
    "tags": ["backtracking", "array"]
  },
        {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 3",
    "topicTitle": "Trying out all Combos / Hard",
    "slug": "word-break",
    "title": "Word Break",
    "difficulty": "Medium",
    "description": "Determine if a string can be segmented into a space-separated sequence of one or more dictionary words.",
    "tags": ["backtracking", "string"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 3",
    "topicTitle": "Trying out all Combos / Hard",
    "slug": "m-coloring-problem",
    "title": "M Coloring Problem",
    "difficulty": "Medium",
    "description": "Given a graph and a number m, determine if the graph can be colored with m colors such that no two adjacent vertices share the same color.",
    "tags": ["backtracking", "graph"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 3",
    "topicTitle": "Trying out all Combos / Hard",
    "slug": "sudoku-solver",
    "title": "Sudoku Solver",
    "difficulty": "Medium",
    "description": "Solve a Sudoku puzzle by filling the empty cells.",
    "tags": ["backtracking", "array"]
  },
          {
    "id": 7,
    "step": "Step 7",
    "stepTitle": "Recursion [PatternWise]",
    "topic": "Lec 3",
    "topicTitle": "Trying out all Combos / Hard",
    "slug": "expression-add-operators",
    "title": "Expression Add Operators",
    "difficulty": "Medium",
    "description": "Given a string containing digits and operators, add the operators in such a way that the expression evaluates to a target value.",
    "tags": ["backtracking", "string"]
  }
]